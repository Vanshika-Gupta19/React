{"ast":null,"code":"var _jsxFileName = \"/Users/vanshika.gupta/Documents/Conditional rendering/demo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [count, setcount] = useState(0);\n  const [showbtn, setshowbtn] = useState(false);\n  const [todos, setTodos] = useState([{\n    title: \"Hey\",\n    desc: \"I am a good Todo\"\n  }, {\n    title: \"Hey I am another Todo\",\n    desc: \"I am also good Todo\"\n  }, {\n    title: \"Hey I am grocery Todo\",\n    desc: \"I am good grocery Todo\"\n  }]);\n  const Todo = ({\n    todo\n  }) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"2px solid black\",\n          margin: \"40px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo\",\n          children: todo.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showbtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"showbtn is true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"showbtn is false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 48\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setshowbtn(!showbtn),\n      children: \"Toggel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }, this), todos.map(todo => {\n      // return(<Todo key={todo.title} todo = {todo}/>)                                     todo}\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wL/6pPVqxSaxZSy2Zty5gBQYOEw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showbtn","setshowbtn","todos","setTodos","title","desc","Todo","todo","children","style","border","margin","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["/Users/vanshika.gupta/Documents/Conditional rendering/demo/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from 'react';\nfunction App() {\n\n  // const [count, setcount] = useState(0);\n  const [showbtn, setshowbtn] = useState(false);\n\n  const [todos, setTodos] = useState([\n    {\n      title: \"Hey\",\n      desc: \"I am a good Todo\"\n    },\n    {\n      title: \"Hey I am another Todo\",\n      desc: \"I am also good Todo\"\n    },\n    {\n      title: \"Hey I am grocery Todo\",\n      desc: \"I am good grocery Todo\"\n    }\n  ])\n  \n  const Todo = ({todo})=>{\n    return( \n      <>\n      <div style={{border: \"2px solid black\", margin: \"40px\"}}>\n      <div className=\"todo\">{todo.title}</div>;\n      <div className=\"todo\">{todo.desc}</div>\n      </div>\n    </>\n    )                                \n}\n\n  return (\n    <div className=\"App\">\n  \n     {/* Rendering CASE1 : WHEN WE HAVE TO USE IF ELSE:  */}\n     {showbtn?<button>showbtn is true</button>:<button>showbtn is false</button>}\n\n\n     {/* Rendering CASE2: WHEN WE HAVE TO USE IF ONLY */}\n     {/* {showbtn && <button>showbtn is true</button>} */}\n    \n\n     <button onClick={()=>setshowbtn(!showbtn)}>Toggel</button>\n\n     {todos.map(todo => {\n      // return(<Todo key={todo.title} todo = {todo}/>)                                     todo}\n     \n     })}\n    \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CACjC;IACEW,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE;EACR,CAAC,EACD;IACED,KAAK,EAAE,uBAAuB;IAC9BC,IAAI,EAAE;EACR,CAAC,EACD;IACED,KAAK,EAAE,uBAAuB;IAC9BC,IAAI,EAAE;EACR,CAAC,CACF,CAAC;EAEF,MAAMC,IAAI,GAAGA,CAAC;IAACC;EAAI,CAAC,KAAG;IACrB,oBACEZ,OAAA,CAAAE,SAAA;MAAAW,QAAA,eACAb,OAAA;QAAKc,KAAK,EAAE;UAACC,MAAM,EAAE,iBAAiB;UAAEC,MAAM,EAAE;QAAM,CAAE;QAAAH,QAAA,gBACxDb,OAAA;UAAKiB,SAAS,EAAC,MAAM;UAAAJ,QAAA,EAAED,IAAI,CAACH;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KACxC,eAAArB,OAAA;UAAKiB,SAAS,EAAC,MAAM;UAAAJ,QAAA,EAAED,IAAI,CAACF;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC,gBACN,CAAC;EAEP,CAAC;EAEC,oBACErB,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAJ,QAAA,GAGlBR,OAAO,gBAACL,OAAA;MAAAa,QAAA,EAAQ;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAACrB,OAAA;MAAAa,QAAA,EAAQ;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAO3ErB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAIhB,UAAU,CAAC,CAACD,OAAO,CAAE;MAAAQ,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEzDd,KAAK,CAACgB,GAAG,CAACX,IAAI,IAAI;MAClB;IAAA,CAEA,CAAC;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGE,CAAC;AAEV;AAACjB,EAAA,CApDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}