{"ast":null,"code":"var _jsxFileName = \"/Users/vanshika.gupta/Documents/web/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { styled } from \"styletron-react\";\nimport { useState } from 'react';\nimport { Card } from 'baseui/card';\nimport { StyledBody } from 'baseui/card';\nimport { Input } from \"baseui/input\";\nimport { Block } from \"baseui/block\";\nimport { Button } from \"baseui/button\";\nimport { List, arrayMove, arrayRemove } from \"baseui/dnd-list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const addItems = () => {\n    if (inputValue.trim() !== '') {\n      setItems([...items, inputValue]);\n      setInputValue('');\n    }\n  };\n  const Card = styled(\"Card\", {\n    color: \"black\",\n    border: \"solid 1px currentColor\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(StyledBody, {\n        children: [/*#__PURE__*/_jsxDEV(Block, {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '20px',\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            placeholder: \"Enter Task\",\n            clearOnEscape: true,\n            overrides: {\n              Root: {\n                style: ({\n                  $theme\n                }) => ({\n                  backgroundColor: $theme.colors.warning200,\n                  width: '500px',\n                  marginRight: '50px'\n                })\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addItems,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          items: items,\n          removable: true,\n          onChange: ({\n            oldIndex,\n            newIndex\n          }) => setItems(newIndex === -1 ? arrayRemove(items, oldIndex) : arrayMove(items, oldIndex, newIndex)),\n          overrides: {\n            Label: {\n              style: ({\n                $theme\n              }) => ({\n                color: $theme.colors.negative600\n              })\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dLPUah1aqPhTEjz1t77n022eOEc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","styled","useState","Card","StyledBody","Input","Block","Button","List","arrayMove","arrayRemove","jsxDEV","_jsxDEV","App","_s","items","setItems","inputValue","setInputValue","addItems","trim","color","border","children","display","alignItems","marginBottom","value","onChange","e","target","placeholder","clearOnEscape","overrides","Root","style","$theme","backgroundColor","colors","warning200","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","removable","oldIndex","newIndex","Label","negative600","_c","$RefreshReg$"],"sources":["/Users/vanshika.gupta/Documents/web/app/src/App.js"],"sourcesContent":["import React from 'react';\nimport { styled } from \"styletron-react\";\nimport { useState } from 'react';\nimport {Card} from 'baseui/card';\nimport { StyledBody } from 'baseui/card';\nimport { Input } from \"baseui/input\";\nimport { Block } from \"baseui/block\";\nimport { Button } from \"baseui/button\";\nimport {List, arrayMove, arrayRemove} from \"baseui/dnd-list\"\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  \n  const addItems = ()=>{\n    if(inputValue.trim() !== ''){\n      setItems([...items , inputValue]);\n      setInputValue('');\n    }\n  };\n\n  const Card = styled(\"Card\", {\n    color: \"black\",\n    border: \"solid 1px currentColor\"\n  });\n\n  return (\n    <div>\n      <Card>\n      <StyledBody>\n      <Block display={'flex'} alignItems={'center'} marginBottom={'20px'}>\n    <Input\n      value={inputValue}\n      onChange={e => setInputValue(e.target.value)}\n      placeholder=\"Enter Task\"\n      clearOnEscape\n      overrides={{\n        Root: {\n          style: ({ $theme }) => ({\n            backgroundColor: $theme.colors.warning200,\n            width: '500px', \n            marginRight: '50px'\n          }),\n        },\n      }}\n    />\n    <Button onClick={addItems}>Add Task</Button>\n    </Block>\n<List\n      items={items}\n      removable\n      onChange={({ oldIndex, newIndex }) =>\n        setItems(\n          newIndex === -1\n            ? arrayRemove(items, oldIndex)\n            : arrayMove(items, oldIndex, newIndex)\n        )\n      }\n      overrides={{\n        Label: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.negative600\n          })\n        }\n      }}\n    />\n\n    </StyledBody>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}