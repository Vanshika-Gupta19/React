{"ast":null,"code":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { getTranslateOffset, transformItem, setItemTransition, binarySearch, schd, isTouchEvent, checkIfInteractive } from './utils.js';\nconst AUTOSCROLL_ACTIVE_OFFSET = 200;\nconst AUTOSCROLL_SPEED_RATIO = 10;\nconst AUTOSCROLL_DELTA_THRESHOLD = 10;\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.listRef = React.createRef();\n    this.ghostRef = React.createRef();\n    this.topOffsets = [];\n    this.itemTranslateOffsets = [];\n    this.initialYOffset = 0;\n    this.lastScroll = 0;\n    this.lastYOffset = 0;\n    this.lastListYOffset = 0;\n    this.needle = -1;\n    this.afterIndex = -2;\n    this.state = {\n      itemDragged: -1,\n      itemDraggedOutOfBounds: -1,\n      selectedItem: -1,\n      initialX: 0,\n      initialY: 0,\n      targetX: 0,\n      targetY: 0,\n      targetHeight: 0,\n      targetWidth: 0,\n      liveText: '',\n      scrollingSpeed: 0,\n      scrollWindow: false\n    };\n    this.doScrolling = () => {\n      const {\n        scrollingSpeed,\n        scrollWindow\n      } = this.state;\n      const listEl = this.listRef.current;\n      window.requestAnimationFrame(() => {\n        if (scrollWindow) {\n          window.scrollTo(window.pageXOffset, window.pageYOffset + scrollingSpeed * 1.5);\n        } else {\n          listEl.scrollTop += scrollingSpeed;\n        }\n        if (scrollingSpeed !== 0) {\n          this.doScrolling();\n        }\n      });\n    };\n    this.getChildren = () => {\n      if (this.listRef && this.listRef.current) {\n        return Array.from(this.listRef.current.children);\n      }\n      console.warn('No items found in the List container. Did you forget to pass & spread the `props` param in renderList?');\n      return [];\n    };\n    this.calculateOffsets = () => {\n      this.topOffsets = this.getChildren().map(item => item.getBoundingClientRect().top);\n      this.itemTranslateOffsets = this.getChildren().map(item => getTranslateOffset(item));\n    };\n    this.getTargetIndex = e => {\n      return this.getChildren().findIndex(child => child === e.target || child.contains(e.target));\n    };\n    this.onMouseOrTouchStart = e => {\n      if (this.dropTimeout && this.state.itemDragged > -1) {\n        window.clearTimeout(this.dropTimeout);\n        this.finishDrop();\n      }\n      const isTouch = isTouchEvent(e);\n      if (!isTouch && e.button !== 0) return;\n      const index = this.getTargetIndex(e);\n      if (index === -1 ||\n      // @ts-ignore\n      this.props.values[index] && this.props.values[index].disabled) {\n        if (this.state.selectedItem !== -1) {\n          this.setState({\n            selectedItem: -1\n          });\n          this.finishDrop();\n        }\n        return;\n      }\n      const listItemTouched = this.getChildren()[index];\n      const handle = listItemTouched.querySelector('[data-movable-handle]');\n      if (handle && !handle.contains(e.target)) {\n        return;\n      }\n      if (checkIfInteractive(e.target, listItemTouched)) {\n        return;\n      }\n      e.preventDefault();\n      this.props.beforeDrag && this.props.beforeDrag({\n        elements: this.getChildren(),\n        index\n      });\n      if (isTouch) {\n        const opts = {\n          passive: false\n        };\n        listItemTouched.style.touchAction = 'none';\n        document.addEventListener('touchend', this.schdOnEnd, opts);\n        document.addEventListener('touchmove', this.schdOnTouchMove, opts);\n        document.addEventListener('touchcancel', this.schdOnEnd, opts);\n      } else {\n        document.addEventListener('mousemove', this.schdOnMouseMove);\n        document.addEventListener('mouseup', this.schdOnEnd);\n        const listItemDragged = this.getChildren()[this.state.itemDragged];\n        if (listItemDragged && listItemDragged.style) {\n          listItemDragged.style.touchAction = '';\n        }\n      }\n      this.onStart(listItemTouched, isTouch ? e.touches[0].clientX : e.clientX, isTouch ? e.touches[0].clientY : e.clientY, index);\n    };\n    this.getYOffset = () => {\n      const listScroll = this.listRef.current ? this.listRef.current.scrollTop : 0;\n      return window.pageYOffset + listScroll;\n    };\n    this.onStart = (target, clientX, clientY, index) => {\n      if (this.state.selectedItem > -1) {\n        this.setState({\n          selectedItem: -1\n        });\n        this.needle = -1;\n      }\n      const targetRect = target.getBoundingClientRect();\n      const targetStyles = window.getComputedStyle(target);\n      this.calculateOffsets();\n      this.initialYOffset = this.getYOffset();\n      this.lastYOffset = window.pageYOffset;\n      this.lastListYOffset = this.listRef.current.scrollTop;\n      this.setState({\n        itemDragged: index,\n        targetX: targetRect.left - parseInt(targetStyles['margin-left'], 10),\n        targetY: targetRect.top - parseInt(targetStyles['margin-top'], 10),\n        targetHeight: targetRect.height,\n        targetWidth: targetRect.width,\n        initialX: clientX,\n        initialY: clientY\n      });\n    };\n    this.onMouseMove = e => {\n      e.cancelable && e.preventDefault();\n      this.onMove(e.clientX, e.clientY);\n    };\n    this.onTouchMove = e => {\n      e.cancelable && e.preventDefault();\n      this.onMove(e.touches[0].clientX, e.touches[0].clientY);\n    };\n    this.onWheel = e => {\n      if (this.state.itemDragged < 0) return;\n      this.lastScroll = this.listRef.current.scrollTop += e.deltaY;\n      this.moveOtherItems();\n    };\n    this.onMove = (clientX, clientY) => {\n      if (this.state.itemDragged === -1) return null;\n      transformItem(this.ghostRef.current, clientY - this.state.initialY, this.props.lockVertically ? 0 : clientX - this.state.initialX);\n      this.autoScrolling(clientY, clientY - this.state.initialY);\n      this.moveOtherItems();\n    };\n    this.moveOtherItems = () => {\n      const targetRect = this.ghostRef.current.getBoundingClientRect();\n      const itemVerticalCenter = targetRect.top + targetRect.height / 2;\n      const offset = getTranslateOffset(this.getChildren()[this.state.itemDragged]);\n      const currentYOffset = this.getYOffset();\n      // adjust offsets if scrolling happens during the item movement\n      if (this.initialYOffset !== currentYOffset) {\n        this.topOffsets = this.topOffsets.map(offset => offset - (currentYOffset - this.initialYOffset));\n        this.initialYOffset = currentYOffset;\n      }\n      if (this.isDraggedItemOutOfBounds() && this.props.removableByMove) {\n        this.afterIndex = this.topOffsets.length + 1;\n      } else {\n        this.afterIndex = binarySearch(this.topOffsets, itemVerticalCenter);\n      }\n      this.animateItems(this.afterIndex === -1 ? 0 : this.afterIndex, this.state.itemDragged, offset);\n    };\n    this.autoScrolling = (clientY, delta) => {\n      const {\n        top,\n        bottom,\n        height\n      } = this.listRef.current.getBoundingClientRect();\n      const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n      // autoscrolling for the window (down)\n      if (bottom > viewportHeight && viewportHeight - clientY < AUTOSCROLL_ACTIVE_OFFSET && delta > AUTOSCROLL_DELTA_THRESHOLD) {\n        this.setState({\n          scrollingSpeed: Math.min(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (viewportHeight - clientY)) / AUTOSCROLL_SPEED_RATIO), Math.round((delta - AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO)),\n          scrollWindow: true\n        });\n        // autoscrolling for the window (up)\n      } else if (top < 0 && clientY < AUTOSCROLL_ACTIVE_OFFSET && delta < -AUTOSCROLL_DELTA_THRESHOLD) {\n        this.setState({\n          scrollingSpeed: Math.max(Math.round((AUTOSCROLL_ACTIVE_OFFSET - clientY) / -AUTOSCROLL_SPEED_RATIO), Math.round((delta + AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO)),\n          scrollWindow: true\n        });\n      } else {\n        if (this.state.scrollWindow && this.state.scrollingSpeed !== 0) {\n          this.setState({\n            scrollingSpeed: 0,\n            scrollWindow: false\n          });\n        }\n        // autoscrolling for containers with overflow\n        if (height + 20 < this.listRef.current.scrollHeight) {\n          let scrollingSpeed = 0;\n          // (up)\n          if (clientY - top < AUTOSCROLL_ACTIVE_OFFSET && delta < -AUTOSCROLL_DELTA_THRESHOLD) {\n            scrollingSpeed = Math.max(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (clientY - top)) / -AUTOSCROLL_SPEED_RATIO), Math.round((delta + AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO));\n            // (down)\n          } else if (bottom - clientY < AUTOSCROLL_ACTIVE_OFFSET && delta > AUTOSCROLL_DELTA_THRESHOLD) {\n            scrollingSpeed = Math.min(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (bottom - clientY)) / AUTOSCROLL_SPEED_RATIO), Math.round((delta - AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO));\n          }\n          if (this.state.scrollingSpeed !== scrollingSpeed) {\n            this.setState({\n              scrollingSpeed\n            });\n          }\n        }\n      }\n    };\n    this.animateItems = (needle, movedItem, offset, animateMovedItem = false) => {\n      this.getChildren().forEach((item, i) => {\n        setItemTransition(item, this.props.transitionDuration);\n        if (movedItem === i && animateMovedItem) {\n          if (movedItem === needle) {\n            return transformItem(item, null);\n          }\n          transformItem(item, movedItem < needle ? this.itemTranslateOffsets.slice(movedItem + 1, needle + 1).reduce((a, b) => a + b, 0) : this.itemTranslateOffsets.slice(needle, movedItem).reduce((a, b) => a + b, 0) * -1);\n        } else if (movedItem < needle && i > movedItem && i <= needle) {\n          transformItem(item, -offset);\n        } else if (i < movedItem && movedItem > needle && i >= needle) {\n          transformItem(item, offset);\n        } else {\n          transformItem(item, null);\n        }\n      });\n    };\n    this.isDraggedItemOutOfBounds = () => {\n      const initialRect = this.getChildren()[this.state.itemDragged].getBoundingClientRect();\n      const targetRect = this.ghostRef.current.getBoundingClientRect();\n      if (Math.abs(initialRect.left - targetRect.left) > targetRect.width) {\n        if (this.state.itemDraggedOutOfBounds === -1) {\n          this.setState({\n            itemDraggedOutOfBounds: this.state.itemDragged\n          });\n        }\n        return true;\n      }\n      if (this.state.itemDraggedOutOfBounds > -1) {\n        this.setState({\n          itemDraggedOutOfBounds: -1\n        });\n      }\n      return false;\n    };\n    this.onEnd = e => {\n      e.cancelable && e.preventDefault();\n      document.removeEventListener('mousemove', this.schdOnMouseMove);\n      document.removeEventListener('touchmove', this.schdOnTouchMove);\n      document.removeEventListener('mouseup', this.schdOnEnd);\n      document.removeEventListener('touchup', this.schdOnEnd);\n      document.removeEventListener('touchcancel', this.schdOnEnd);\n      const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();\n      if (!removeItem && this.props.transitionDuration > 0 && this.afterIndex !== -2) {\n        // animate drop\n        schd(() => {\n          setItemTransition(this.ghostRef.current, this.props.transitionDuration, 'cubic-bezier(.2,1,.1,1)');\n          if (this.afterIndex < 1 && this.state.itemDragged === 0) {\n            transformItem(this.ghostRef.current, 0, 0);\n          } else {\n            transformItem(this.ghostRef.current,\n            // compensate window scroll\n            -(window.pageYOffset - this.lastYOffset) +\n            // compensate container scroll\n            -(this.listRef.current.scrollTop - this.lastListYOffset) + (this.state.itemDragged < this.afterIndex ? this.itemTranslateOffsets.slice(this.state.itemDragged + 1, this.afterIndex + 1).reduce((a, b) => a + b, 0) : this.itemTranslateOffsets.slice(this.afterIndex < 0 ? 0 : this.afterIndex, this.state.itemDragged).reduce((a, b) => a + b, 0) * -1), 0);\n          }\n        })();\n      }\n      this.dropTimeout = window.setTimeout(this.finishDrop, removeItem || this.afterIndex === -2 ? 0 : this.props.transitionDuration);\n    };\n    this.finishDrop = () => {\n      const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();\n      if (removeItem || this.afterIndex > -2 && this.state.itemDragged !== this.afterIndex) {\n        this.props.onChange({\n          oldIndex: this.state.itemDragged,\n          newIndex: removeItem ? -1 : Math.max(this.afterIndex, 0),\n          targetRect: this.ghostRef.current.getBoundingClientRect()\n        });\n      }\n      this.getChildren().forEach(item => {\n        setItemTransition(item, 0);\n        transformItem(item, null);\n        item.style.touchAction = '';\n      });\n      this.setState({\n        itemDragged: -1,\n        scrollingSpeed: 0\n      });\n      this.afterIndex = -2;\n      // sometimes the scroll gets messed up after the drop, fix:\n      if (this.lastScroll > 0) {\n        this.listRef.current.scrollTop = this.lastScroll;\n        this.lastScroll = 0;\n      }\n    };\n    this.onKeyDown = e => {\n      const selectedItem = this.state.selectedItem;\n      const index = this.getTargetIndex(e);\n      if (checkIfInteractive(e.target, e.currentTarget)) {\n        return;\n      }\n      if (index === -1) return;\n      if (e.key === ' ') {\n        e.preventDefault();\n        if (selectedItem === index) {\n          if (selectedItem !== this.needle) {\n            this.getChildren().forEach(item => {\n              setItemTransition(item, 0);\n              transformItem(item, null);\n            });\n            this.props.onChange({\n              oldIndex: selectedItem,\n              newIndex: this.needle,\n              targetRect: this.getChildren()[this.needle].getBoundingClientRect()\n            });\n            this.getChildren()[this.needle].focus();\n          }\n          this.setState({\n            selectedItem: -1,\n            liveText: this.props.voiceover.dropped(selectedItem + 1, this.needle + 1)\n          });\n          this.needle = -1;\n        } else {\n          this.setState({\n            selectedItem: index,\n            liveText: this.props.voiceover.lifted(index + 1)\n          });\n          this.needle = index;\n          this.calculateOffsets();\n        }\n      }\n      if ((e.key === 'ArrowDown' || e.key === 'j') && selectedItem > -1 && this.needle < this.props.values.length - 1) {\n        e.preventDefault();\n        const offset = getTranslateOffset(this.getChildren()[selectedItem]);\n        this.needle++;\n        this.animateItems(this.needle, selectedItem, offset, true);\n        this.setState({\n          liveText: this.props.voiceover.moved(this.needle + 1, false)\n        });\n      }\n      if ((e.key === 'ArrowUp' || e.key === 'k') && selectedItem > -1 && this.needle > 0) {\n        e.preventDefault();\n        const offset = getTranslateOffset(this.getChildren()[selectedItem]);\n        this.needle--;\n        this.animateItems(this.needle, selectedItem, offset, true);\n        this.setState({\n          liveText: this.props.voiceover.moved(this.needle + 1, true)\n        });\n      }\n      if (e.key === 'Escape' && selectedItem > -1) {\n        this.getChildren().forEach(item => {\n          setItemTransition(item, 0);\n          transformItem(item, null);\n        });\n        this.setState({\n          selectedItem: -1,\n          liveText: this.props.voiceover.canceled(selectedItem + 1)\n        });\n        this.needle = -1;\n      }\n      if ((e.key === 'Tab' || e.key === 'Enter') && selectedItem > -1) {\n        e.preventDefault();\n      }\n    };\n    this.schdOnMouseMove = schd(this.onMouseMove);\n    this.schdOnTouchMove = schd(this.onTouchMove);\n    this.schdOnEnd = schd(this.onEnd);\n  }\n  componentDidMount() {\n    this.calculateOffsets();\n    document.addEventListener('touchstart', this.onMouseOrTouchStart, {\n      passive: false,\n      capture: false\n    });\n    document.addEventListener('mousedown', this.onMouseOrTouchStart);\n  }\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.scrollingSpeed !== this.state.scrollingSpeed && prevState.scrollingSpeed === 0) {\n      this.doScrolling();\n    }\n  }\n  componentWillUnmount() {\n    document.removeEventListener('touchstart', this.onMouseOrTouchStart);\n    document.removeEventListener('mousedown', this.onMouseOrTouchStart);\n    if (this.dropTimeout) {\n      window.clearTimeout(this.dropTimeout);\n    }\n    this.schdOnMouseMove.cancel();\n    this.schdOnTouchMove.cancel();\n    this.schdOnEnd.cancel();\n  }\n  render() {\n    const baseStyle = {\n      userSelect: 'none',\n      WebkitUserSelect: 'none',\n      MozUserSelect: 'none',\n      msUserSelect: 'none',\n      boxSizing: 'border-box',\n      position: 'relative'\n    };\n    const ghostStyle = {\n      ...baseStyle,\n      top: this.state.targetY,\n      left: this.state.targetX,\n      width: this.state.targetWidth,\n      height: this.state.targetHeight,\n      position: 'fixed',\n      marginTop: 0\n    };\n    return React.createElement(React.Fragment, null, this.props.renderList({\n      children: this.props.values.map((value, index) => {\n        const isHidden = index === this.state.itemDragged;\n        const isSelected = index === this.state.selectedItem;\n        const isDisabled =\n        // @ts-ignore\n        this.props.values[index] && this.props.values[index].disabled;\n        const props = {\n          key: index,\n          tabIndex: isDisabled ? -1 : 0,\n          'aria-roledescription': this.props.voiceover.item(index + 1),\n          onKeyDown: this.onKeyDown,\n          style: {\n            ...baseStyle,\n            visibility: isHidden ? 'hidden' : undefined,\n            zIndex: isSelected ? 5000 : 0\n          }\n        };\n        return this.props.renderItem({\n          value,\n          props,\n          index,\n          isDragged: false,\n          isSelected,\n          isOutOfBounds: false\n        });\n      }),\n      isDragged: this.state.itemDragged > -1,\n      props: {\n        ref: this.listRef\n      }\n    }), this.state.itemDragged > -1 && ReactDOM.createPortal(this.props.renderItem({\n      value: this.props.values[this.state.itemDragged],\n      props: {\n        ref: this.ghostRef,\n        style: ghostStyle,\n        onWheel: this.onWheel\n      },\n      index: this.state.itemDragged,\n      isDragged: true,\n      isSelected: false,\n      isOutOfBounds: this.state.itemDraggedOutOfBounds > -1\n    }), this.props.container || document.body), React.createElement(\"div\", {\n      \"aria-live\": \"assertive\",\n      role: \"log\",\n      \"aria-atomic\": \"true\",\n      style: {\n        position: 'absolute',\n        width: '1px',\n        height: '1px',\n        margin: '-1px',\n        border: '0px',\n        padding: '0px',\n        overflow: 'hidden',\n        clip: 'rect(0px, 0px, 0px, 0px)',\n        clipPath: 'inset(100%)'\n      }\n    }, this.state.liveText));\n  }\n}\nList.defaultProps = {\n  transitionDuration: 300,\n  lockVertically: false,\n  removableByMove: false,\n  voiceover: {\n    item: position => `You are currently at a draggable item at position ${position}. Press space bar to lift.`,\n    lifted: position => `You have lifted item at position ${position}. Press j to move down, k to move up, space bar to drop and escape to cancel.`,\n    moved: (position, up) => `You have moved the lifted item ${up ? 'up' : 'down'} to position ${position}. Press j to move down, k to move up, space bar to drop and escape to cancel.`,\n    dropped: (from, to) => `You have dropped the item. It has moved from position ${from} to ${to}.`,\n    canceled: position => `You have cancelled the movement. The item has returned to its starting position of ${position}.`\n  }\n};\nexport default List;","map":{"version":3,"names":["React","ReactDOM","getTranslateOffset","transformItem","setItemTransition","binarySearch","schd","isTouchEvent","checkIfInteractive","AUTOSCROLL_ACTIVE_OFFSET","AUTOSCROLL_SPEED_RATIO","AUTOSCROLL_DELTA_THRESHOLD","List","Component","constructor","props","listRef","createRef","ghostRef","topOffsets","itemTranslateOffsets","initialYOffset","lastScroll","lastYOffset","lastListYOffset","needle","afterIndex","state","itemDragged","itemDraggedOutOfBounds","selectedItem","initialX","initialY","targetX","targetY","targetHeight","targetWidth","liveText","scrollingSpeed","scrollWindow","doScrolling","listEl","current","window","requestAnimationFrame","scrollTo","pageXOffset","pageYOffset","scrollTop","getChildren","Array","from","children","console","warn","calculateOffsets","map","item","getBoundingClientRect","top","getTargetIndex","e","findIndex","child","target","contains","onMouseOrTouchStart","dropTimeout","clearTimeout","finishDrop","isTouch","button","index","values","disabled","setState","listItemTouched","handle","querySelector","preventDefault","beforeDrag","elements","opts","passive","style","touchAction","document","addEventListener","schdOnEnd","schdOnTouchMove","schdOnMouseMove","listItemDragged","onStart","touches","clientX","clientY","getYOffset","listScroll","targetRect","targetStyles","getComputedStyle","left","parseInt","height","width","onMouseMove","cancelable","onMove","onTouchMove","onWheel","deltaY","moveOtherItems","lockVertically","autoScrolling","itemVerticalCenter","offset","currentYOffset","isDraggedItemOutOfBounds","removableByMove","length","animateItems","delta","bottom","viewportHeight","innerHeight","documentElement","clientHeight","Math","min","round","max","scrollHeight","movedItem","animateMovedItem","forEach","i","transitionDuration","slice","reduce","a","b","initialRect","abs","onEnd","removeEventListener","removeItem","setTimeout","onChange","oldIndex","newIndex","onKeyDown","currentTarget","key","focus","voiceover","dropped","lifted","moved","canceled","componentDidMount","capture","componentDidUpdate","_prevProps","prevState","componentWillUnmount","cancel","render","baseStyle","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","boxSizing","position","ghostStyle","marginTop","createElement","Fragment","renderList","value","isHidden","isSelected","isDisabled","tabIndex","visibility","undefined","zIndex","renderItem","isDragged","isOutOfBounds","ref","createPortal","container","body","role","margin","border","padding","overflow","clip","clipPath","defaultProps","up","to"],"sources":["/Users/vanshika.gupta/Documents/web/app/node_modules/react-movable/lib/List.js"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { getTranslateOffset, transformItem, setItemTransition, binarySearch, schd, isTouchEvent, checkIfInteractive } from './utils.js';\nconst AUTOSCROLL_ACTIVE_OFFSET = 200;\nconst AUTOSCROLL_SPEED_RATIO = 10;\nconst AUTOSCROLL_DELTA_THRESHOLD = 10;\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.listRef = React.createRef();\n        this.ghostRef = React.createRef();\n        this.topOffsets = [];\n        this.itemTranslateOffsets = [];\n        this.initialYOffset = 0;\n        this.lastScroll = 0;\n        this.lastYOffset = 0;\n        this.lastListYOffset = 0;\n        this.needle = -1;\n        this.afterIndex = -2;\n        this.state = {\n            itemDragged: -1,\n            itemDraggedOutOfBounds: -1,\n            selectedItem: -1,\n            initialX: 0,\n            initialY: 0,\n            targetX: 0,\n            targetY: 0,\n            targetHeight: 0,\n            targetWidth: 0,\n            liveText: '',\n            scrollingSpeed: 0,\n            scrollWindow: false\n        };\n        this.doScrolling = () => {\n            const { scrollingSpeed, scrollWindow } = this.state;\n            const listEl = this.listRef.current;\n            window.requestAnimationFrame(() => {\n                if (scrollWindow) {\n                    window.scrollTo(window.pageXOffset, window.pageYOffset + scrollingSpeed * 1.5);\n                }\n                else {\n                    listEl.scrollTop += scrollingSpeed;\n                }\n                if (scrollingSpeed !== 0) {\n                    this.doScrolling();\n                }\n            });\n        };\n        this.getChildren = () => {\n            if (this.listRef && this.listRef.current) {\n                return Array.from(this.listRef.current.children);\n            }\n            console.warn('No items found in the List container. Did you forget to pass & spread the `props` param in renderList?');\n            return [];\n        };\n        this.calculateOffsets = () => {\n            this.topOffsets = this.getChildren().map((item) => item.getBoundingClientRect().top);\n            this.itemTranslateOffsets = this.getChildren().map((item) => getTranslateOffset(item));\n        };\n        this.getTargetIndex = (e) => {\n            return this.getChildren().findIndex((child) => child === e.target || child.contains(e.target));\n        };\n        this.onMouseOrTouchStart = (e) => {\n            if (this.dropTimeout && this.state.itemDragged > -1) {\n                window.clearTimeout(this.dropTimeout);\n                this.finishDrop();\n            }\n            const isTouch = isTouchEvent(e);\n            if (!isTouch && e.button !== 0)\n                return;\n            const index = this.getTargetIndex(e);\n            if (index === -1 ||\n                // @ts-ignore\n                (this.props.values[index] && this.props.values[index].disabled)) {\n                if (this.state.selectedItem !== -1) {\n                    this.setState({ selectedItem: -1 });\n                    this.finishDrop();\n                }\n                return;\n            }\n            const listItemTouched = this.getChildren()[index];\n            const handle = listItemTouched.querySelector('[data-movable-handle]');\n            if (handle && !handle.contains(e.target)) {\n                return;\n            }\n            if (checkIfInteractive(e.target, listItemTouched)) {\n                return;\n            }\n            e.preventDefault();\n            this.props.beforeDrag &&\n                this.props.beforeDrag({\n                    elements: this.getChildren(),\n                    index\n                });\n            if (isTouch) {\n                const opts = { passive: false };\n                listItemTouched.style.touchAction = 'none';\n                document.addEventListener('touchend', this.schdOnEnd, opts);\n                document.addEventListener('touchmove', this.schdOnTouchMove, opts);\n                document.addEventListener('touchcancel', this.schdOnEnd, opts);\n            }\n            else {\n                document.addEventListener('mousemove', this.schdOnMouseMove);\n                document.addEventListener('mouseup', this.schdOnEnd);\n                const listItemDragged = this.getChildren()[this.state.itemDragged];\n                if (listItemDragged && listItemDragged.style) {\n                    listItemDragged.style.touchAction = '';\n                }\n            }\n            this.onStart(listItemTouched, isTouch ? e.touches[0].clientX : e.clientX, isTouch ? e.touches[0].clientY : e.clientY, index);\n        };\n        this.getYOffset = () => {\n            const listScroll = this.listRef.current\n                ? this.listRef.current.scrollTop\n                : 0;\n            return window.pageYOffset + listScroll;\n        };\n        this.onStart = (target, clientX, clientY, index) => {\n            if (this.state.selectedItem > -1) {\n                this.setState({ selectedItem: -1 });\n                this.needle = -1;\n            }\n            const targetRect = target.getBoundingClientRect();\n            const targetStyles = window.getComputedStyle(target);\n            this.calculateOffsets();\n            this.initialYOffset = this.getYOffset();\n            this.lastYOffset = window.pageYOffset;\n            this.lastListYOffset = this.listRef.current.scrollTop;\n            this.setState({\n                itemDragged: index,\n                targetX: targetRect.left - parseInt(targetStyles['margin-left'], 10),\n                targetY: targetRect.top - parseInt(targetStyles['margin-top'], 10),\n                targetHeight: targetRect.height,\n                targetWidth: targetRect.width,\n                initialX: clientX,\n                initialY: clientY\n            });\n        };\n        this.onMouseMove = (e) => {\n            e.cancelable && e.preventDefault();\n            this.onMove(e.clientX, e.clientY);\n        };\n        this.onTouchMove = (e) => {\n            e.cancelable && e.preventDefault();\n            this.onMove(e.touches[0].clientX, e.touches[0].clientY);\n        };\n        this.onWheel = (e) => {\n            if (this.state.itemDragged < 0)\n                return;\n            this.lastScroll = this.listRef.current.scrollTop += e.deltaY;\n            this.moveOtherItems();\n        };\n        this.onMove = (clientX, clientY) => {\n            if (this.state.itemDragged === -1)\n                return null;\n            transformItem(this.ghostRef.current, clientY - this.state.initialY, this.props.lockVertically ? 0 : clientX - this.state.initialX);\n            this.autoScrolling(clientY, clientY - this.state.initialY);\n            this.moveOtherItems();\n        };\n        this.moveOtherItems = () => {\n            const targetRect = this.ghostRef.current.getBoundingClientRect();\n            const itemVerticalCenter = targetRect.top + targetRect.height / 2;\n            const offset = getTranslateOffset(this.getChildren()[this.state.itemDragged]);\n            const currentYOffset = this.getYOffset();\n            // adjust offsets if scrolling happens during the item movement\n            if (this.initialYOffset !== currentYOffset) {\n                this.topOffsets = this.topOffsets.map((offset) => offset - (currentYOffset - this.initialYOffset));\n                this.initialYOffset = currentYOffset;\n            }\n            if (this.isDraggedItemOutOfBounds() && this.props.removableByMove) {\n                this.afterIndex = this.topOffsets.length + 1;\n            }\n            else {\n                this.afterIndex = binarySearch(this.topOffsets, itemVerticalCenter);\n            }\n            this.animateItems(this.afterIndex === -1 ? 0 : this.afterIndex, this.state.itemDragged, offset);\n        };\n        this.autoScrolling = (clientY, delta) => {\n            const { top, bottom, height } = this.listRef.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n            // autoscrolling for the window (down)\n            if (bottom > viewportHeight &&\n                viewportHeight - clientY < AUTOSCROLL_ACTIVE_OFFSET &&\n                delta > AUTOSCROLL_DELTA_THRESHOLD) {\n                this.setState({\n                    scrollingSpeed: Math.min(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (viewportHeight - clientY)) /\n                        AUTOSCROLL_SPEED_RATIO), Math.round((delta - AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO)),\n                    scrollWindow: true\n                });\n                // autoscrolling for the window (up)\n            }\n            else if (top < 0 &&\n                clientY < AUTOSCROLL_ACTIVE_OFFSET &&\n                delta < -AUTOSCROLL_DELTA_THRESHOLD) {\n                this.setState({\n                    scrollingSpeed: Math.max(Math.round((AUTOSCROLL_ACTIVE_OFFSET - clientY) / -AUTOSCROLL_SPEED_RATIO), Math.round((delta + AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO)),\n                    scrollWindow: true\n                });\n            }\n            else {\n                if (this.state.scrollWindow && this.state.scrollingSpeed !== 0) {\n                    this.setState({ scrollingSpeed: 0, scrollWindow: false });\n                }\n                // autoscrolling for containers with overflow\n                if (height + 20 < this.listRef.current.scrollHeight) {\n                    let scrollingSpeed = 0;\n                    // (up)\n                    if (clientY - top < AUTOSCROLL_ACTIVE_OFFSET &&\n                        delta < -AUTOSCROLL_DELTA_THRESHOLD) {\n                        scrollingSpeed = Math.max(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (clientY - top)) /\n                            -AUTOSCROLL_SPEED_RATIO), Math.round((delta + AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO));\n                        // (down)\n                    }\n                    else if (bottom - clientY < AUTOSCROLL_ACTIVE_OFFSET &&\n                        delta > AUTOSCROLL_DELTA_THRESHOLD) {\n                        scrollingSpeed = Math.min(Math.round((AUTOSCROLL_ACTIVE_OFFSET - (bottom - clientY)) /\n                            AUTOSCROLL_SPEED_RATIO), Math.round((delta - AUTOSCROLL_DELTA_THRESHOLD) / AUTOSCROLL_SPEED_RATIO));\n                    }\n                    if (this.state.scrollingSpeed !== scrollingSpeed) {\n                        this.setState({ scrollingSpeed });\n                    }\n                }\n            }\n        };\n        this.animateItems = (needle, movedItem, offset, animateMovedItem = false) => {\n            this.getChildren().forEach((item, i) => {\n                setItemTransition(item, this.props.transitionDuration);\n                if (movedItem === i && animateMovedItem) {\n                    if (movedItem === needle) {\n                        return transformItem(item, null);\n                    }\n                    transformItem(item, movedItem < needle\n                        ? this.itemTranslateOffsets\n                            .slice(movedItem + 1, needle + 1)\n                            .reduce((a, b) => a + b, 0)\n                        : this.itemTranslateOffsets\n                            .slice(needle, movedItem)\n                            .reduce((a, b) => a + b, 0) * -1);\n                }\n                else if (movedItem < needle && i > movedItem && i <= needle) {\n                    transformItem(item, -offset);\n                }\n                else if (i < movedItem && movedItem > needle && i >= needle) {\n                    transformItem(item, offset);\n                }\n                else {\n                    transformItem(item, null);\n                }\n            });\n        };\n        this.isDraggedItemOutOfBounds = () => {\n            const initialRect = this.getChildren()[this.state.itemDragged].getBoundingClientRect();\n            const targetRect = this.ghostRef.current.getBoundingClientRect();\n            if (Math.abs(initialRect.left - targetRect.left) > targetRect.width) {\n                if (this.state.itemDraggedOutOfBounds === -1) {\n                    this.setState({ itemDraggedOutOfBounds: this.state.itemDragged });\n                }\n                return true;\n            }\n            if (this.state.itemDraggedOutOfBounds > -1) {\n                this.setState({ itemDraggedOutOfBounds: -1 });\n            }\n            return false;\n        };\n        this.onEnd = (e) => {\n            e.cancelable && e.preventDefault();\n            document.removeEventListener('mousemove', this.schdOnMouseMove);\n            document.removeEventListener('touchmove', this.schdOnTouchMove);\n            document.removeEventListener('mouseup', this.schdOnEnd);\n            document.removeEventListener('touchup', this.schdOnEnd);\n            document.removeEventListener('touchcancel', this.schdOnEnd);\n            const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();\n            if (!removeItem &&\n                this.props.transitionDuration > 0 &&\n                this.afterIndex !== -2) {\n                // animate drop\n                schd(() => {\n                    setItemTransition(this.ghostRef.current, this.props.transitionDuration, 'cubic-bezier(.2,1,.1,1)');\n                    if (this.afterIndex < 1 && this.state.itemDragged === 0) {\n                        transformItem(this.ghostRef.current, 0, 0);\n                    }\n                    else {\n                        transformItem(this.ghostRef.current, \n                        // compensate window scroll\n                        -(window.pageYOffset - this.lastYOffset) +\n                            // compensate container scroll\n                            -(this.listRef.current.scrollTop - this.lastListYOffset) +\n                            (this.state.itemDragged < this.afterIndex\n                                ? this.itemTranslateOffsets\n                                    .slice(this.state.itemDragged + 1, this.afterIndex + 1)\n                                    .reduce((a, b) => a + b, 0)\n                                : this.itemTranslateOffsets\n                                    .slice(this.afterIndex < 0 ? 0 : this.afterIndex, this.state.itemDragged)\n                                    .reduce((a, b) => a + b, 0) * -1), 0);\n                    }\n                })();\n            }\n            this.dropTimeout = window.setTimeout(this.finishDrop, removeItem || this.afterIndex === -2 ? 0 : this.props.transitionDuration);\n        };\n        this.finishDrop = () => {\n            const removeItem = this.props.removableByMove && this.isDraggedItemOutOfBounds();\n            if (removeItem ||\n                (this.afterIndex > -2 && this.state.itemDragged !== this.afterIndex)) {\n                this.props.onChange({\n                    oldIndex: this.state.itemDragged,\n                    newIndex: removeItem ? -1 : Math.max(this.afterIndex, 0),\n                    targetRect: this.ghostRef.current.getBoundingClientRect()\n                });\n            }\n            this.getChildren().forEach((item) => {\n                setItemTransition(item, 0);\n                transformItem(item, null);\n                item.style.touchAction = '';\n            });\n            this.setState({ itemDragged: -1, scrollingSpeed: 0 });\n            this.afterIndex = -2;\n            // sometimes the scroll gets messed up after the drop, fix:\n            if (this.lastScroll > 0) {\n                this.listRef.current.scrollTop = this.lastScroll;\n                this.lastScroll = 0;\n            }\n        };\n        this.onKeyDown = (e) => {\n            const selectedItem = this.state.selectedItem;\n            const index = this.getTargetIndex(e);\n            if (checkIfInteractive(e.target, e.currentTarget)) {\n                return;\n            }\n            if (index === -1)\n                return;\n            if (e.key === ' ') {\n                e.preventDefault();\n                if (selectedItem === index) {\n                    if (selectedItem !== this.needle) {\n                        this.getChildren().forEach((item) => {\n                            setItemTransition(item, 0);\n                            transformItem(item, null);\n                        });\n                        this.props.onChange({\n                            oldIndex: selectedItem,\n                            newIndex: this.needle,\n                            targetRect: this.getChildren()[this.needle].getBoundingClientRect()\n                        });\n                        this.getChildren()[this.needle].focus();\n                    }\n                    this.setState({\n                        selectedItem: -1,\n                        liveText: this.props.voiceover.dropped(selectedItem + 1, this.needle + 1)\n                    });\n                    this.needle = -1;\n                }\n                else {\n                    this.setState({\n                        selectedItem: index,\n                        liveText: this.props.voiceover.lifted(index + 1)\n                    });\n                    this.needle = index;\n                    this.calculateOffsets();\n                }\n            }\n            if ((e.key === 'ArrowDown' || e.key === 'j') &&\n                selectedItem > -1 &&\n                this.needle < this.props.values.length - 1) {\n                e.preventDefault();\n                const offset = getTranslateOffset(this.getChildren()[selectedItem]);\n                this.needle++;\n                this.animateItems(this.needle, selectedItem, offset, true);\n                this.setState({\n                    liveText: this.props.voiceover.moved(this.needle + 1, false)\n                });\n            }\n            if ((e.key === 'ArrowUp' || e.key === 'k') &&\n                selectedItem > -1 &&\n                this.needle > 0) {\n                e.preventDefault();\n                const offset = getTranslateOffset(this.getChildren()[selectedItem]);\n                this.needle--;\n                this.animateItems(this.needle, selectedItem, offset, true);\n                this.setState({\n                    liveText: this.props.voiceover.moved(this.needle + 1, true)\n                });\n            }\n            if (e.key === 'Escape' && selectedItem > -1) {\n                this.getChildren().forEach((item) => {\n                    setItemTransition(item, 0);\n                    transformItem(item, null);\n                });\n                this.setState({\n                    selectedItem: -1,\n                    liveText: this.props.voiceover.canceled(selectedItem + 1)\n                });\n                this.needle = -1;\n            }\n            if ((e.key === 'Tab' || e.key === 'Enter') && selectedItem > -1) {\n                e.preventDefault();\n            }\n        };\n        this.schdOnMouseMove = schd(this.onMouseMove);\n        this.schdOnTouchMove = schd(this.onTouchMove);\n        this.schdOnEnd = schd(this.onEnd);\n    }\n    componentDidMount() {\n        this.calculateOffsets();\n        document.addEventListener('touchstart', this.onMouseOrTouchStart, {\n            passive: false,\n            capture: false\n        });\n        document.addEventListener('mousedown', this.onMouseOrTouchStart);\n    }\n    componentDidUpdate(_prevProps, prevState) {\n        if (prevState.scrollingSpeed !== this.state.scrollingSpeed &&\n            prevState.scrollingSpeed === 0) {\n            this.doScrolling();\n        }\n    }\n    componentWillUnmount() {\n        document.removeEventListener('touchstart', this.onMouseOrTouchStart);\n        document.removeEventListener('mousedown', this.onMouseOrTouchStart);\n        if (this.dropTimeout) {\n            window.clearTimeout(this.dropTimeout);\n        }\n        this.schdOnMouseMove.cancel();\n        this.schdOnTouchMove.cancel();\n        this.schdOnEnd.cancel();\n    }\n    render() {\n        const baseStyle = {\n            userSelect: 'none',\n            WebkitUserSelect: 'none',\n            MozUserSelect: 'none',\n            msUserSelect: 'none',\n            boxSizing: 'border-box',\n            position: 'relative'\n        };\n        const ghostStyle = {\n            ...baseStyle,\n            top: this.state.targetY,\n            left: this.state.targetX,\n            width: this.state.targetWidth,\n            height: this.state.targetHeight,\n            position: 'fixed',\n            marginTop: 0\n        };\n        return (React.createElement(React.Fragment, null,\n            this.props.renderList({\n                children: this.props.values.map((value, index) => {\n                    const isHidden = index === this.state.itemDragged;\n                    const isSelected = index === this.state.selectedItem;\n                    const isDisabled = \n                    // @ts-ignore\n                    this.props.values[index] && this.props.values[index].disabled;\n                    const props = {\n                        key: index,\n                        tabIndex: isDisabled ? -1 : 0,\n                        'aria-roledescription': this.props.voiceover.item(index + 1),\n                        onKeyDown: this.onKeyDown,\n                        style: {\n                            ...baseStyle,\n                            visibility: isHidden ? 'hidden' : undefined,\n                            zIndex: isSelected ? 5000 : 0\n                        }\n                    };\n                    return this.props.renderItem({\n                        value,\n                        props,\n                        index,\n                        isDragged: false,\n                        isSelected,\n                        isOutOfBounds: false\n                    });\n                }),\n                isDragged: this.state.itemDragged > -1,\n                props: {\n                    ref: this.listRef\n                }\n            }),\n            this.state.itemDragged > -1 &&\n                ReactDOM.createPortal(this.props.renderItem({\n                    value: this.props.values[this.state.itemDragged],\n                    props: {\n                        ref: this.ghostRef,\n                        style: ghostStyle,\n                        onWheel: this.onWheel\n                    },\n                    index: this.state.itemDragged,\n                    isDragged: true,\n                    isSelected: false,\n                    isOutOfBounds: this.state.itemDraggedOutOfBounds > -1\n                }), this.props.container || document.body),\n            React.createElement(\"div\", { \"aria-live\": \"assertive\", role: \"log\", \"aria-atomic\": \"true\", style: {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    margin: '-1px',\n                    border: '0px',\n                    padding: '0px',\n                    overflow: 'hidden',\n                    clip: 'rect(0px, 0px, 0px, 0px)',\n                    clipPath: 'inset(100%)'\n                } }, this.state.liveText)));\n    }\n}\nList.defaultProps = {\n    transitionDuration: 300,\n    lockVertically: false,\n    removableByMove: false,\n    voiceover: {\n        item: (position) => `You are currently at a draggable item at position ${position}. Press space bar to lift.`,\n        lifted: (position) => `You have lifted item at position ${position}. Press j to move down, k to move up, space bar to drop and escape to cancel.`,\n        moved: (position, up) => `You have moved the lifted item ${up ? 'up' : 'down'} to position ${position}. Press j to move down, k to move up, space bar to drop and escape to cancel.`,\n        dropped: (from, to) => `You have dropped the item. It has moved from position ${from} to ${to}.`,\n        canceled: (position) => `You have cancelled the movement. The item has returned to its starting position of ${position}.`\n    }\n};\nexport default List;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}