{"ast":null,"code":"var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\nfunction index(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n  return result;\n}\nexport default index;","map":{"version":3,"names":["shallowEqual","newValue","oldValue","simpleIsEqual","newArgs","lastArgs","length","every","newArg","index","resultFn","isEqual","lastThis","lastResult","calledOnce","result","_len","arguments","Array","_key","apply"],"sources":["/Users/vanshika.gupta/Documents/web/app/node_modules/memoize-one/dist/memoize-one.esm.js"],"sourcesContent":["var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\n\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG,SAASA,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC3D,OAAOD,QAAQ,KAAKC,QAAQ;AAC9B,CAAC;AAED,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,OAAO,EAAEC,QAAQ,EAAE;EAC5D,OAAOD,OAAO,CAACE,MAAM,KAAKD,QAAQ,CAACC,MAAM,IAAIF,OAAO,CAACG,KAAK,CAAC,UAAUC,MAAM,EAAEC,KAAK,EAAE;IAClF,OAAOT,YAAY,CAACQ,MAAM,EAAEH,QAAQ,CAACI,KAAK,CAAC,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC;AAED,SAASA,KAAKA,CAAEC,QAAQ,EAAEC,OAAO,EAAE;EACjC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAGR,aAAa;EACzB;EAEA,IAAIS,QAAQ;EACZ,IAAIP,QAAQ,GAAG,EAAE;EACjB,IAAIQ,UAAU;EACd,IAAIC,UAAU,GAAG,KAAK;EAEtB,IAAIC,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC7B,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACX,MAAM,EAAEF,OAAO,GAAG,IAAIc,KAAK,CAACF,IAAI,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;MAC1Ff,OAAO,CAACe,IAAI,CAAC,GAAGF,SAAS,CAACE,IAAI,CAAC;IACjC;IAEA,IAAIL,UAAU,IAAIF,QAAQ,KAAK,IAAI,IAAID,OAAO,CAACP,OAAO,EAAEC,QAAQ,CAAC,EAAE;MACjE,OAAOQ,UAAU;IACnB;IAEAA,UAAU,GAAGH,QAAQ,CAACU,KAAK,CAAC,IAAI,EAAEhB,OAAO,CAAC;IAC1CU,UAAU,GAAG,IAAI;IACjBF,QAAQ,GAAG,IAAI;IACfP,QAAQ,GAAGD,OAAO;IAClB,OAAOS,UAAU;EACnB,CAAC;EAED,OAAOE,MAAM;AACf;AAEA,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}